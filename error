private void registerCapturedFaces() {
        String name = nameEditText.getText().toString().trim();
        if (name.isEmpty()) {
            Toast.makeText(this, "Please enter a name", Toast.LENGTH_SHORT).show();
            return;
        }

        // Create folder in Documents
        File documentsDir = Environment.getExternalStoragePublicDirectory(
                Environment.DIRECTORY_DOCUMENTS);
        File namedFolder = new File(documentsDir, name + "_Faces");

        if (!namedFolder.exists()) {
            namedFolder.mkdirs();
        }

        // Move captured faces to the new folder
        for (String sourcePath : capturedFacePaths) {
            File sourceFile = new File(sourcePath);
            File destFile = new File(namedFolder, sourceFile.getName());

            try {
                FileInputStream in = new FileInputStream(sourceFile);
                FileOutputStream out = new FileOutputStream(destFile);

                byte[] buffer = new byte[1024];
                int read;
                while ((read = in.read(buffer)) != -1) {
                    out.write(buffer, 0, read);
                }

                in.close();
                out.close();

                // Optional: Delete original file
                sourceFile.delete();
            } catch (IOException e) {
                e.printStackTrace();
            }
        }

       
        // Clear the list and reset UI
        capturedFacePaths.clear();
        Toast.makeText(this, "Faces registered for " + name, Toast.LENGTH_LONG).show();

        // Reset for potential new capture

        //TODO : add another person or done buttons and then take below actions
        postRegister.setVisibility(View.VISIBLE);
        registerButton.setVisibility(View.GONE);
        addAnotherButton.setOnClickListener(v -> {
            nameEditText.setText("");
            registerButton.setVisibility(View.VISIBLE);
            showCameraPreview();
            postRegister.setVisibility(View.INVISIBLE);
        });
